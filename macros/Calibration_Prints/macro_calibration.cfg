[gcode_macro Calibration_Tool]
description: Collection of prints to determine and calibrate print settings
variable_extr_temp: 0 # global variable for use in the START_TUNING_PRINT macro
variable_bed_temp: 0 # global variable for use in the START_TUNING_PRINT macro
variable_fan: 0 # global variable to set cooling fan speed inside the _Test.cfg Test prints
gcode:
    {% set TOOL = params.TOOL|default(0)|string %} # Define TOOL parameter to choose between the calibration tool
    {% set EXTR_T = params.EXTRUDER_TEMP|default(200)|float %}  # Define Extruder_Temp parameter for the calibration prints
    {% set BED_T = params.BED_TEMP|default(60)|float %} # Define Bed-Temp parameter for the calibration prints
    {% set FAN = params.FAN|default(255)|int %} # Define Fan parameter to set the calibration prints
    {% set S = params.START|default(0.1)|float %} # Define Start parameter for the pressure advance tuning test command
    {% set F = params.FACTOR|default(0.005)|float %} # Define factor parameter for the pressure advance tuning test command
    {% set C = params.CALC|default(0)|int %} # Define the CALC parameter for the inbuilt calculator for flow and pressure advance

    SET_GCODE_VARIABLE MACRO=Calibration_Tool VARIABLE=extr_temp VALUE={EXTR_T} # set the global variable for the extruder temperature you provided
    SET_GCODE_VARIABLE MACRO=Calibration_Tool VARIABLE=bed_temp VALUE={BED_T} # set the global parameter for the bed temperature you provided

    {% if TOOL == "heat" %} # name of the TOOL to select the heat_test print
      {% if EXTR_T >= 210 %} # ensures you won't select a too low start temperature to avoid extruder temperature getting low at the last segments (minimum extruder temperature)
        HEAT_TEST # calls the macro for the test print
      {% else %}
        RESPOND TYPE=error MSG='Minimum start temperature 210°C' # message if you select a too low start temperature
      {% endif %}

    {% elif TOOL == "flow" %} # name of the TOOL to select the flow_test print
      {% if C == 0 %}
        FLOW_TEST # calls the macro for the test print
      {% else %}
        {% set Result = 0.4 * 100 / C %} # formula for calculating new flow value using CALC
        RESPOND TYPE=error MSG='New Flow value = {Result}' # outputs the new calculated value
      {% endif %}

    {% elif TOOL == "pressure" %} # name of the TOOL to select the pressure advanced test print
      {% if C == 0 %} # checks if you just want to use the calculator, if not -> print
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
        TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START={S} FACTOR={F}
        PRESSURE_TEST
        RESTART
      {% else %}
        {% set Result = S + C * F %} # formula for calculating new pressure advanced value using CALC
        RESPOND TYPE=error MSG='New Pressure Advanced Value = {Result}' # outputs the new calculated value
      {% endif %}

    {% elif TOOL == "validation" %} # name of the TOOL to select the validation test pattern
      VALIDATION_TEST # calls the macro for the test print

    {% elif TOOL == "help" %} # name of the tool to output information about the use of the macro. Just a bunch of text output
      RESPOND TYPE=error MSG="Note: you can slice your own test print and replace the gcode inside their respected Calibration_Prints/..._Test.cfg, but there must be changes in the gcode in order for it to work, more info inside their .cfg"
      RESPOND TYPE=error MSG="CAUTION: All test prints currently are sliced for the Anycubic Predator Delta Printer. Bed Origin 0,0 is center of the bed"
      RESPOND TYPE=error MSG="CAUTION: START_TUNING_TEST currently tuned for Anycubic Predator Delta Printer"
      RESPOND TYPE=error MSG="NOTE: For the test Print, there is a separate START_TUNING_PRINT macro inside Calibration_Prints/Calibration_Tool.cfg"
      RESPOND TYPE=error MSG="Note: \"heat\": minimum EXTRUDER_TEMP = 210, otherwise Print temperature drops below the minimum extruder temp at the last segment"
      RESPOND TYPE=error MSG="Note: Parameters which aren't needed for the selected \"TOOL\" can be ignored"
      RESPOND TYPE=error MSG="validation: prints a 1 layer high pattern covering the print bed, to validate bed leveling"
      RESPOND TYPE=error MSG="pressure: prints the tuning tower for pressure advance tuning. Measure the best-looking height, type the number in \"CALC\" and \"TOOL\" set to \"pressure\", to get the optimal pressure advance value"
      RESPOND TYPE=error MSG="flow: prints a rounded vase mode cube at 100% flow. Measure the average thickness of all 4 walls and type the number in \"CALC\" and \"TOOL\" set to \"flow\", to get a new optimal flow value."
      RESPOND TYPE=error MSG="heat: prints a vase mode cube with 8 stacked segments. EXTRUDER_TEMP = START_TEMP, temperature drops every 5mm (1 segment) 5°C, choose the best segment to determine the optimal print temperature."
      RESPOND TYPE=error MSG="CALC: for calculating FLOW or PRESSURE advanced values"
      RESPOND TYPE=error MSG="START and FACTOR: for the pressure advanced tuning tower command"
      RESPOND TYPE=error MSG="EXTRUDER_TEMP and BED_TEMP: set print temperatures, FAN: set cooling fan speed"
      RESPOND TYPE=error MSG="TOOL: choose between 4 test prints: 'heat', 'flow', 'pressure' and 'validation'"

    {% else %}
      RESPOND TYPE=error MSG='TOOL DOES NOT EXIST! Either choose "heat", "flow", "pressure" or "validation"' # message if you choose a non-defined TOOL
    {% endif %}

####################################################################################################

[gcode_macro START_TUNING_PRINT]
description: separate start gcode for the calibration prints
gcode:
    {% set BED_TEMP = printer["gcode_macro Calibration_Tool"].bed_temp|default(60)|float %} # Sets bed temperature inside the test print .cfg's
    {% set EXTRUDER_TEMP = printer["gcode_macro Calibration_Tool"].extr_temp|default(200)|float %} # Sets extruder temperature inside the test print .cfg's
    # Start bed heating (but don't wait for it)
    M140 S{BED_TEMP}
    # Set to Absolute Coordination
    G90
    # Home the printer
    G28

    # Set Bed LEDs White
    {% for cnt in range(13, 25) %}
      SET_LED LED=my_neopixel RED=0.5 GREEN=0.5 BLUE=0.5 INDEX={cnt+1} TRANSMIT=1
    {% endfor %}

    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    # Move Nozzle near bed
    G0 F3000 Z50
    # Set to Relative Coordination
    G91
    # Extrude 10mm
    G1 E5 F300
    # Set to Absolute Coordination
    G90
